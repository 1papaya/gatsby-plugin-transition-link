✔ pass the same transitionState to pages / templates that's passed to the TransitionConsumer @done(18-10-26 10:49)
✔ prevent transitionlinks from being clicked while a transition is in progress @done(18-10-26 15:23)
✔ prevent scroll jumping when transitioning @done(18-10-26 16:04)
✔ BUG: state is reseting before the page transitions from page 2 to page 1. Stopped working in 1c56134dd2dfe3ec3004b97174d34886776b1ac7 @done(18-10-26 18:53)
✔ refactor API @done(18-10-27 12:38)
    ✔ add the ability to delay exit (same as entry. on click the trigger should go but the state shouldn't change until the delay is up, navigation should also be paused. @done(18-10-27 12:15)
    ✔ pass entire enter prop object into enter trigger function (same for exit) @done(18-10-27 12:37)
✔ clean up the internal variables and make them all consistent @done(18-10-27 12:54)
    ✔ for should be length @done(18-10-27 12:54)
    ✔ in should be delay @done(18-10-27 12:54)
✔ add exitdelay to state @done(18-10-27 13:28)
✔ add entire exit and entry props to transition state consumer / page props @done(18-10-27 13:28)
✔ refactor to make things easier to understand and add comments where necessary @done(18-10-27 13:55)
✔ quick update readme @done(18-10-27 14:13)
✔ release next version to fix build errors on example site @done(18-10-27 22:44)
✔ BUG: sometimes using the back/forward buttons causes state based transitions to fire. @done(18-10-29 20:26)
✔ Add <TransitionPortal /> react portal to display content above the page while transitioning @done(18-10-29 22:43)
✔ Add layer prop to transitionportal with the possible values of "bottom" "middle" and "above" @done(18-10-29 22:43)
✘ add an option to make TransitionConsumer use the portal @cancelled(18-10-29 22:44) //kindof unnecessary
✘ Consider an option to separate entry and exit portals @cancelled(18-10-26 10:56) // no need for this. Portals retain their react context so TransitionConsumer can be used in them.
✔ rename TransitionConsumer to TransitionState @done(18-10-29 22:46)
✔ switch to something like tick to improve timer accuracy https://github.com/charlottegore/tick @done(18-11-03 11:26) used requestanimationframe-timer
☐ add option to disable scroll to top
☐ pass entire animation props to the trigger functions
☐ test that animation "hooks" are still firing at the right time
☐ saved position when navigating with back button is inconsistent check https://github.com/ryanwiemer/rw/issues/1
☐ Add some generic default transitions using transition portal
    ☐ fade
    ☐ cover swipe up, left, right, down
    ☐ expanding bubble
    ☐ wipe in
☐ update docs / create website
    ☐ new api
    ☐ add a visual timeline of events in, for, trigger, state, and when they happen
    ☐ idea / overview section should be rewritten and moved to blog post
☐ release v1
☐ Write blog post for gatsbyjs.org

Future
☐ consolidate internal and external context into a single context
☐ hook into location state so that going back and forward in the browser still triggers animation. This should be optional with a plugin setting "reverse: bool" which can also be overridden by a prop. Transition direction should also be added to transition state. Use location key instead of transitionId
☐ Add example of using triggerTransition() to transition using events other than click


API scratchpad

to="/"
exit={{
    for: "100ms",  // option can be set to return seconds
    state: {}
    trigger: state => Fn(state), 
    }}
entry={{
    in: 1, // default is in ms
    for: 2, // option can be set to return seconds
    trigger: state => Fn(state)
    state: {
        theme: 'dark'
        }
    }}

